# This is an example configuration file for PyProfiler

# Setup

# Directory for apache access logs
#logDir = /Users/xli/Desktop/logs/

# output files
outputXml = mkt_out.xml
outputRules = mkt_rules.conf

# application information
appName = mkt
appHost = 

# reference urls: generated by django-extensions from source code via command: show-urls
refUrls = ref_urls

# filter setting:::
methods = GET|POST
status = 200  
# 301, 302

# store unhandled log entries for manual inspection
#outputInvalidData = invalid_log

# ignore certain URL prefixs in profiling
#ignorePrefix = /download


# confidence setting:::
# minimum request pattern occurence
minUrlPatternOccurence = 100

# minimum parameter occurence (should compare to other parameters
minParamOccurence = 10


# Content patterns:::
# The order of patterns here is IMPORTANT. Strict patterns should appear first.
# NOTICE here: this is not input validation, e.g., incorrect email format is not an attack, to reduce FP.
pattern.lang=[a-z][a-z](-[A-Z][A-Z])?
pattern.digits=[0-9]+
pattern.digitsHex=[0-9a-fA-F]+
pattern.integer=[-+]*[0-9]+
pattern.decimal=[-+]*[0-9]+\.[0-9]+
pattern.param=[a-zA-Z0-9._-]+
pattern.path=[-a-zA-Z0-9/._]*/[-a-zA-Z0-9/._]*
pattern.url=[A-Za-z]+://[A-Za-z0-9-_]+\.[A-Za-z0-9-_.]+/?
pattern.phone=[-0-9. ()]+
pattern.phoneInt=\+?[-0-9. ]+
pattern.zip=[-0-9a-zA-Z]+
pattern.email=\s*[-a-zA-Z0-9_.@]+\s*
pattern.password=\s*[\x09\x20-\xff]+\s*



